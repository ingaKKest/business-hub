import random
import os
import time
import collections
import string
# adds colour to words
from termcolor import cprint
# start of business wordle program

def getGuess(clues, guessWords):
    while True:
        print()
        guess = input("Enter your guess: ").lower()
        # checks if word is in the alphabet
        if len(guess) != 5 or not guess.isalpha():
            print("Guess must be 5 letters")
            continue
        elif guess not in guessWords:
            print("Word not in dictionary")
            continue

        return guess


def colorResult(guess, word):
    guessColors = ['on_grey'] * 5  # default to grey

    # find greens
    for i in range(len(word)):
        if word[i] == guess[i]:
            guessColors[i] = 'on_green'

    # find yellows
    left = [x for x in range(len(word)) if guessColors[x] != 'on_green']
    for wordIndex in left:
        for guessIndex in left:
            w = word[wordIndex]
            g = guess[guessIndex]
            if w == g and + guessColors[guessIndex] == 'on_grey':
                guessColors[guessIndex] = 'on_yellow'
                break

    # print guess
    for i, x in enumerate(guess):
        cprint(x.upper(), 'white', guessColors[i], attrs=['bold'], end=' ')
    print()

    return guessColors


def printLetterBank(targetWord, guesses, guessColorsList):
    keyboard = list("qwertyuiopasdfghjklzxcvbnm")
    keyColors = {}
    for k in keyboard:
        keyColors[k] = 'on_grey'  # default color if it hasn't been guessed

    # determine colors for keyboard
    for letter in keyboard:
        for g in range(len(guesses)):
            guess = guesses[g]
            guessColors = guessColorsList[g]
            for guessLetterInd in range(len(guess)):
                if guess[guessLetterInd] == letter:  # found a matching letter
                    guessColor = guessColors[guessLetterInd]
                    if guessColor == 'on_green':
                        keyColors[letter] = 'on_green'
                    elif guessColor == 'on_yellow':
                        if keyColors[letter] != 'on_green':
                            keyColors[letter] = 'on_yellow'
                    elif guessColor == 'on_grey':
                        g = keyColors[letter]
                        if g != 'on_green' and g != 'on_yellow':
                            # used as a key, not an actual color
                            keyColors[letter] = 'wrong'

    # print keyboard
    print()
    for k in keyboard:
        if keyColors[k] == 'wrong':  # a wrong guess will be dark
            cprint(
                k.upper(),
                'white',
                'on_grey',
                attrs=[
                    'bold',
                    'dark'],
                end=' ')
        else:
            cprint(k.upper(), 'white', keyColors[k], attrs=['bold'], end=' ')
        if k == 'p':
            print('\n ', end='')
        elif k == 'l':
            print('\n   ', end='')
    print()


def mainwordlegame():
    os.system('clear')
    print("Welcome to Business Wordle!")
    print("improve your business vocabulary")

    # read in word banks
    with open('business.txt', 'r') as FILE:
        words = [word.rstrip() for word in FILE]
    choices = [w for w in words if len(w) == 5]
    with open('dictionary.txt', 'r') as FILE:
        words = [word.rstrip() for word in FILE]
    guessWords = words + choices

    # randomly choose a target word
    word = random.choice(choices)
    guesses = []

    print("Enter anything to start the game.")
    inp = input()

    # keep track of clues for hard mode
    clues = ['on_grey'] * 5

    # start game
    print("\nYou have 6 tries to guess the 5-letter word.")
    while True:
        # prompt player for guess
        guess = getGuess(clues, guessWords)
        guesses.append(guess)

        # print guess results
        os.system('clear')
        guessColorsList = []
        for g in guesses:
            guessColors = colorResult(g, word)
            guessColorsList.append(guessColors)

            # update clues
            for i in range(len(guessColors)):
                if guessColors[i] == 'on_green':
                    clues[i] = 'on_green'
                elif guessColors[i] == 'on_yellow':
                    try:
                        letterIndex = word.index(guess[i])
                    except ValueError:
                        letterIndex = -1
                    if letterIndex != -1 and clues[letterIndex] != 'on_green':
                        clues[letterIndex] = 'on_yellow'

        # print keyboard
        printLetterBank(word, guesses, guessColorsList)

        # check for win/lose
        if guess == word:
            print('\nYou Win!')
            break
        elif len(guesses) == 6:
            print("\nSorry, you ran out of guesses.")
            print("The word was:", word.upper())
            break
