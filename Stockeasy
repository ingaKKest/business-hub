import random
import os
import time
import collections
import string
# adds colour to words
from termcolor import cprint

# list of all stocks


# clears the text on screen to make it easier to read
def clearConsole():
    command = 'clear'
    if os.name in ('nt', 'dos'):
        command = 'cls'
    os.system(command)


# allows user to play full game
def FullGameStockEASY():
    days = amount_of_days()
    clearConsole()
    i = 0
    average = 0
    avg = 0
    times = 0
    share = 0
    bal = 1000
# while days are more tha zero the game will continue
    while i < int(days):
        left = int(days) - i
        print("\n===============================" +
              "============================================" +
              "=================\n")
        print("Days Left: " + str(left), end='   -   ')
        print("Balance: $" + str(bal), end='   -   ')
        print("Shares: " + str(share), end='   -   ')
        print("Average Buy Cost: $" + str(avg))
        print(" \n")
        # randomly selects the price each day
        stock = random.randint(1, 1100)
        print("Today's stock price: $" + str(stock))
        i = i + 1
        # allows user to buy the max amount
        maxbuy = (bal / stock)
        maxbuy = int(maxbuy)
        # allows user to choose what they want to do
        invest = str(input(
            "\nWhat would you like to do?    Buy(1)?    Sell(2)?" +
            " Or wait to the next day(3)?\n\nYour Choice?: "))
        print("\n----------")
        # allows user to purchase shares
        if(invest == "1"):
            print(
                "The max amount of shares you can buy is: " +
                str(maxbuy) +
                "\n----------")
            print("If you want to buy max shares type '12345'.\n-")
            while True:
                check = 'True'
                while check == 'True':
                    try:
                        amount = int(
                            input("How many shares would you like to buy?: "))
                        check = 'false'
                    except ValueError:
                        print("-\nPlease input integer only...")
                        print("----------")
                if amount < 0:
                    print("You cannot enter a negative number")
                else:
                    break
            print("----------")
            if(str(amount) == "12345"):
                amount = maxbuy
            elif(amount > maxbuy):
                print(
                    "----------\n you do not have enough money so " +
                    "I'm buying the max amount you can afford instead.")
                amount = maxbuy
                time.sleep(1.75)
                # calulates users balance
            bal = (bal - amount * stock)
            share = (share + amount)
            if(maxbuy > 0):
                if(amount > 0):
                    if(amount == 12345):
                        times = times + 1
                        average = average + stock
                    else:
                        times = times + 1
                        average = average + stock
    # allows user to sell their stock
        elif(invest == "2"):
            print(
                "The max amount of shares you can sell is " +
                str(share) +
                ".\n----------")
            print("If you would like to sell all of your shares type " +
                  "'12345' else...")
            while True:
                check = 'True'
                while check == 'True':
                    try:
                        sell = int(
                            input("How many shares would you like to sell?: "))
                        check = 'false'
                    except ValueError:
                        print("-\nPlease input integer only...")
                        print("----------")
                if sell < 0:
                    print("You cannot enter a negative number")
                else:
                    break

            if(str(sell) == "12345"):
                sell = share
                bal = bal + sell * stock
                share = share - sell
            elif(sell > share):
                print("----------\n\n You do not have enough " +
                      " shares\n\n----------")
                time.sleep(1.5)
            else:
                bal = bal + sell * stock
                share = share - sell
        else:
            print("You skipped the day... Don't you feel USELESS sometimes?!")
            time.sleep(0.675)
        if(times > 0):
            avg = average / times
            avg = int(avg)
        clearConsole()
        # once user runs out of days they are able to convert without having to
        # sell
    if(share > 0):
        lprice = random.randint(50, 1050)
        print("Last day's stock price: " + str(lprice) + "\n----------")
        convert = int(input(
            "Would you like me to convert your shares to dollars" +
            " using the last share price? Yes(1) No(2): "))
        # once user finishes they are able to see how they did
        if(convert == 1):
            bal = (bal + share * int(lprice))
            share = 0

    print("----------\n\nYou have 0 days left to make money. " +
          "Lets see how you did!\n\n----------")

    print(
        "\nAfter " +
        str(days) +
        " days you have made $" +
        str(bal) +
        " dollars.\n\n-")
    print("\nYou own " + str(share) + " shares.\n\n----------")
    if(bal < 1000):
        print("\n\nYOU LOST THE MONEY!!!")
    elif(bal == 1000):
        print("\n\nAre you sure that you played the game at all?!?!?!")
    elif(bal < 1000000):
        print(
            "\n\nPretty good but I think you can do better, maybe " +
            "if you play for longer?!")
    elif(bal < 1000000000):
        print("\n\nWOW, very good indeed")
    elif(bal < 1000000000000):
        print("\n\nCan you teach me your ways? Because that was amazing!")
    else:
        print("\n\nVERY VERY Impressive!!! Now just do that in the real " +
              "world and you will be set")

# end of stock easy program
